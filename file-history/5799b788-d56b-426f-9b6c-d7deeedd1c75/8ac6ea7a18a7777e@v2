# CLI Chat Client

## Repository Context

FYI, this chat client is a separate application in a subdirectory of the
chat_service git repository. The subdirectory is called `cli_client`, and that
is the directory in which _this_ specific CLAUDE.md file is located. It is
important that you understand the difference between the git repository root
and the root of this chat client application.

## Project Standards

### Code Quality
- **Warnings-as-errors MANDATORY**: `[lints.rust] warnings = "deny"` must be configured in Cargo.toml
- **Zero tolerance** for compiler warnings in committed code
- **All tests must pass** before any commits
- **Clean build required** - no compilation errors or warnings

### Development Approach
- **Workflow functions first** - Define WHAT we want to DO in lib.rs before HOW
- **Compiler-driven types** - Only create types when compilation fails, not speculatively
- **Kent Beck TDD** - "Fake it till you make it" for minimal green implementations
- **Parse-don't-validate** - Use nominal types at all boundaries
- **Outside-in TDD** - Start with integration tests, drill down to units as needed

### Sequential Workflow
- **NEVER skip phases** - Each phase must complete before the next
- **Agent delegation MANDATORY** - Main coordinator delegates ALL code changes to specialized agents
- **Independent verification** - Main agent verifies all agent claims using cargo/git commands
- **Post-implementation review** - Domain modeler reviews every green implementation
