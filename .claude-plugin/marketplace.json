{
  "name": "jwilger-sdlc",
  "owner": {
    "name": "John Wilger",
    "email": "john@johnwilger.com"
  },
  "metadata": {
    "description": "Professional SDLC workflow with Event Modeling, TDD, and Type-First Design",
    "version": "1.0.0",
    "pluginRoot": "./plugins"
  },
  "plugins": [
    {
      "name": "sdlc-core",
      "source": "./plugins/sdlc-core",
      "description": "Core SDLC workflow: 8 phases from requirements to deployment",
      "version": "1.0.0",
      "author": {
        "name": "John Wilger"
      },
      "category": "workflow",
      "keywords": ["sdlc", "event-modeling", "tdd", "architecture", "sequential-workflow"],
      "components": {
        "agents": [
          "requirements-analyst",
          "event-modeling-step-0",
          "event-modeling-step-1",
          "event-modeling-step-2",
          "event-modeling-step-3",
          "event-modeling-step-4",
          "event-modeling-step-5",
          "event-modeling-step-6",
          "event-modeling-step-7",
          "event-modeling-step-8",
          "event-modeling-step-9",
          "event-modeling-step-10",
          "event-modeling-step-11",
          "event-modeling-step-12",
          "event-modeling-pm",
          "event-modeling-architect",
          "adr-writer",
          "architecture-synthesizer",
          "design-system-architect",
          "story-planner",
          "story-architect",
          "ux-consultant",
          "red-tdd-tester",
          "green-implementer",
          "acceptance-validator",
          "technical-documentation-writer",
          "research-specialist",
          "cognitive-load-analyzer",
          "devops",
          "dependency-management",
          "file-editor"
        ],
        "commands": [
          "sdlc-workflow",
          "setup-sdlc-alias",
          "event-modeling-process",
          "tdd-workflow-process",
          "domain-modeling-process",
          "story-planning-process",
          "documentation-philosophy",
          "adr-template",
          "design-system-process",
          "dependency-management-process",
          "github-pr-management",
          "integration-validation",
          "event-model-template"
        ]
      }
    },
    {
      "name": "sdlc-rust",
      "source": "./plugins/sdlc-rust",
      "description": "Rust domain modeling agent with cargo-mcp integration",
      "version": "1.0.0",
      "author": {
        "name": "John Wilger"
      },
      "category": "language",
      "keywords": ["rust", "domain-modeling", "cargo", "mcp", "nutype"],
      "components": {
        "agents": ["rust-domain-model-expert"],
        "commands": ["setup-cargo-mcp"],
        "mcpServers": ["cargo-mcp"]
      }
    },
    {
      "name": "sdlc-python",
      "source": "./plugins/sdlc-python",
      "description": "Python domain modeling agent (Pydantic, type-first TDD)",
      "version": "1.0.0",
      "author": {
        "name": "John Wilger"
      },
      "category": "language",
      "keywords": ["python", "domain-modeling", "pydantic"],
      "components": {
        "agents": ["python-domain-model-expert"]
      }
    },
    {
      "name": "sdlc-typescript",
      "source": "./plugins/sdlc-typescript",
      "description": "TypeScript domain modeling agent (branded types, discriminated unions)",
      "version": "1.0.0",
      "author": {
        "name": "John Wilger"
      },
      "category": "language",
      "keywords": ["typescript", "domain-modeling", "types"],
      "components": {
        "agents": ["typescript-domain-model-expert"]
      }
    },
    {
      "name": "sdlc-elixir",
      "source": "./plugins/sdlc-elixir",
      "description": "Elixir domain modeling agent (pattern matching, structs)",
      "version": "1.0.0",
      "author": {
        "name": "John Wilger"
      },
      "category": "language",
      "keywords": ["elixir", "domain-modeling", "pattern-matching"],
      "components": {
        "agents": ["elixir-domain-model-expert"]
      }
    }
  ]
}
